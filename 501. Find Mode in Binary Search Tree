from collections import defaultdict

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def findMode(self, root: TreeNode) -> List[int]:
        d = defaultdict(lambda:0)
        d = self.inorder(root, d) 
        
        if(len(d) == 0):
            return []   
        max_value = max(value for value in d.values())
        res = []
        
        for key in d.keys():
            if d[key] == max_value:
                res.append(key)
        
        return res
        
    def inorder(self, root, d):
        if(root == None):
            return d
        self.inorder(root.left, d)
        d[root.val] += 1
        self.inorder(root.right, d)
        return d
    
    
